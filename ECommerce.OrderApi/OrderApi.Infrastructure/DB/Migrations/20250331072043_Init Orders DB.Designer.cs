// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderApi.Infrastructure.DB;

#nullable disable

namespace OrderApi.Infrastructure.DB.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20250331072043_Init Orders DB")]
    partial class InitOrdersDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("OrderApi.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchasedQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders", null, t =>
                        {
                            t.HasCheckConstraint("CK_Order_OrderedDate", "DATE(OrderedDate) = DATE('now', 'utc')");

                            t.HasCheckConstraint("CK_Order_PurchasedQuantity", "[PurchasedQuantity] >= 1 AND [PurchasedQuantity] <= 10000");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
